{"version":3,"sources":["AxiosInstance.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","App","state","sensores","luces","actuadores","sensoresRegistros","lucesRegistros","actuadoresRegistros","modalInsertarLuz","modalInsertarSensor","modalInsertarActuador","modalEliminarLuz","modalEliminarSensor","modalEliminarActuador","formLuz","id","nombre","descripcion","tipoLuz","ubicacion","unidades","tipoModal","formSensor","tipoSensor","formActuador","tipoActuador","peticionGetLuces","axiosInstance","get","then","response","setState","data","console","log","catch","error","message","peticionGetSensores","peticionGetActuadores","peticionGetLucesRegistros","peticionGetSensoresRegistros","peticionGetActuadoresRegistros","handleChangeLuzForm","e","a","persist","target","name","value","handleChangeSensorForm","handleChangeActuadorForm","peticionPostLuz","post","peticionPostSensor","peticionPostActuador","seleccionarLuz","luz","seleccionarSensor","sensor","seleccionarActuador","actuador","peticionPutLuz","put","peticionPutSensor","peticionPutActuador","peticionDeleteLuz","delete","peticionDeleteSensor","peticionDeleteActuador","this","className","onClick","map","icon","faEdit","faTrashAlt","idLuz","timeStamp","valor","aplicado","idSensor","idActuador","Modal","isOpen","ModalHeader","style","display","float","ModalBody","htmlFor","type","placeholder","onChange","ModalFooter","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4b9b731.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst url=\"https://ginger-backend.herokuapp.com/api/\";\r\n\r\nexport default axios.create({\r\n  baseURL: url\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport axiosInstance from './AxiosInstance.js';\r\n\r\n\r\nclass App extends Component {\r\nstate={\r\n  sensores: [],\r\n  luces: [],\r\n  actuadores: [],\r\n  sensoresRegistros: [],\r\n  lucesRegistros: [],\r\n  actuadoresRegistros: [],\r\n  modalInsertarLuz: false,\r\n  modalInsertarSensor: false,\r\n  modalInsertarActuador: false,\r\n  modalEliminarLuz: false,\r\n  modalEliminarSensor: false,\r\n  modalEliminarActuador: false,\r\n  formLuz:{\r\n    id: '',\r\n    nombre: '',\r\n    descripcion: '',\r\n    tipoLuz: '',\r\n    ubicacion: '',\r\n    unidades: '',\r\n    tipoModal: ''\r\n  },\r\n  formSensor:{\r\n    id: '',\r\n    nombre: '',\r\n    descripcion: '',\r\n    tipoSensor: '',\r\n    ubicacion: '',\r\n    unidades: '',\r\n    tipoModal: ''\r\n  },\r\n  formActuador:{\r\n    id: '',\r\n    nombre: '',\r\n    descripcion: '',\r\n    tipoActuador: 'a',\r\n    ubicacion: '',\r\n    unidades: '',\r\n    tipoModal: ''\r\n  }\r\n}\r\n\r\npeticionGetLuces=()=>{\r\n  axiosInstance.get('/luz/luces').then(response=>{\r\n    this.setState({luces: response.data}, () => {\r\n      console.log(this.state.luces);\r\n    });\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionGetSensores=()=>{\r\n  axiosInstance.get('/sensor/sensores').then(response=>{\r\n    this.setState({sensores: response.data});\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionGetActuadores=()=>{\r\n  axiosInstance.get('/actuador/acturadores').then(response=>{\r\n    this.setState({actuadores: response.data});\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionGetLucesRegistros=()=>{\r\n  axiosInstance.get('/luzregistro/registros').then(response=>{\r\n    this.setState({lucesRegistros: response.data});\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionGetSensoresRegistros=()=>{\r\n  axiosInstance.get('/sensorregistro/registros').then(response=>{\r\n    this.setState({sensoresRegistros: response.data});\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionGetActuadoresRegistros=()=>{\r\n  axiosInstance.get('/actuadorregistro/registros').then(response=>{\r\n    this.setState({actuadoresRegistros: response.data});\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\nmodalInsertarLuz=()=>{\r\n  this.setState({modalInsertarLuz: !this.state.modalInsertarLuz});\r\n}\r\nmodalInsertarSensor=()=>{\r\n  this.setState({modalInsertarSensor: !this.state.modalInsertarSensor});\r\n}\r\nmodalInsertarActuador=()=>{\r\n  this.setState({modalInsertarActuador: !this.state.modalInsertarActuador});\r\n}\r\n\r\nmodalEliminarLuz=()=>{\r\n  this.setState({modalInsertarLuz: !this.state.modalInsertarLuz});\r\n}\r\nmodalEliminarSensor=()=>{\r\n  this.setState({modalEliminarSensor: !this.state.modalEliminarSensor});\r\n}\r\nmodalEliminarActuador=()=>{\r\n  this.setState({modalEliminarActuador: !this.state.modalEliminarActuador});\r\n}\r\n\r\nhandleChangeLuzForm=async e=>{\r\n  e.persist();\r\n  await this.setState({\r\n    formLuz:{\r\n      ...this.state.formLuz,         //Esta linea sirve para heredar todo lo que ya hay en el form y no se borre cuando el usuario escriba\r\n      [e.target.name]: e.target.value\r\n    }\r\n  });\r\n  console.log(this.state.formLuz);\r\n}\r\n\r\nhandleChangeSensorForm=async e=>{\r\n  e.persist();\r\n  await this.setState({\r\n    formSensor:{\r\n      ...this.state.formSensor,         //Esta linea sirve para heredar todo lo que ya hay en el form y no se borre cuando el usuario escriba\r\n      [e.target.name]: e.target.value\r\n    }\r\n  });\r\n  console.log(this.state.formSensor);\r\n}\r\n\r\nhandleChangeActuadorForm=async e=>{\r\n  e.persist();\r\n  await this.setState({\r\n    formActuador:{\r\n      ...this.state.formActuador,         //Esta linea sirve para heredar todo lo que ya hay en el form y no se borre cuando el usuario escriba\r\n      [e.target.name]: e.target.value\r\n    }\r\n  });\r\n  console.log(this.state.formActuador);\r\n}\r\n\r\npeticionPostLuz=async()=>{\r\n  delete this.state.formLuz.id;\r\n  await axiosInstance.post(\"/luz\",this.state.formLuz).then(response=>{\r\n    this.modalInsertarLuz();\r\n    this.peticionGetLuces();\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionPostSensor=async()=>{\r\n  delete this.state.formSensor.id;\r\n  await axiosInstance.post(\"/sensor\",this.state.formSensor).then(response=>{\r\n    this.modalInsertarSensor();\r\n    this.peticionGetSensores();\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\npeticionPostActuador=async()=>{\r\n  delete this.state.formActuador.id;\r\n  await axiosInstance.post(\"/actuador\",this.state.formActuador).then(response=>{\r\n    this.modalInsertarActuador();\r\n    this.peticionGetActuadores();\r\n  }).catch(error=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n\r\nseleccionarLuz=(luz)=>{\r\n  this.setState({\r\n    formLuz: {\r\n      tipoModal: 'actualizar',\r\n      id: luz.id,\r\n      nombre: luz.nombre,\r\n      descripcion: luz.descripcion,\r\n      tipoLuz: luz.tipoLuz,\r\n      ubicacion: luz.ubicacion,\r\n      unidades: luz.unidades\r\n    }\r\n  })\r\n}\r\n\r\nseleccionarSensor=(sensor)=>{\r\n  this.setState({\r\n    formSensor: {\r\n      tipoModal: 'actualizar',\r\n      id: sensor.id,\r\n      nombre: sensor.nombre,\r\n      descripcion: sensor.descripcion,\r\n      tipoSensor: sensor.tipoSensor,\r\n      ubicacion: sensor.ubicacion,\r\n      unidades: sensor.unidades\r\n    }\r\n  })\r\n}\r\n\r\nseleccionarActuador=(actuador)=>{\r\n  this.setState({\r\n    formActuador: {\r\n      tipoModal: 'actualizar',\r\n      id: actuador.id,\r\n      nombre: actuador.nombre,\r\n      descripcion: actuador.descripcion,\r\n      tipoActuador: actuador.tipoActuador,\r\n      ubicacion: actuador.ubicacion,\r\n      unidades: actuador.unidades\r\n    }\r\n  })\r\n}\r\n\r\npeticionPutLuz=()=>{\r\n  console.log(this.state.formLuz);\r\n  delete this.state.formLuz.tipoModal;\r\n  axiosInstance.put(\"/luz/\"+this.state.formLuz.id, this.state.formLuz).then(response=>{\r\n    this.modalInsertarLuz();\r\n    this.peticionGetLuces();\r\n  })\r\n}\r\n\r\npeticionPutSensor=()=>{\r\n  console.log(this.state.formSensor);\r\n  delete this.state.formSensor.tipoModal;\r\n  axiosInstance.put(\"/sensor/\"+this.state.formSensor.id, this.state.formSensor).then(response=>{\r\n    this.modalInsertarSensor();\r\n    this.peticionGetSensores();\r\n  })\r\n}\r\n\r\npeticionPutActuador=()=>{\r\n  console.log(this.state.formActuador);\r\n  delete this.state.formActuador.tipoModal;\r\n  axiosInstance.put(\"/actuador/\"+this.state.formActuador.id, this.state.formActuador).then(response=>{\r\n    this.modalInsertarActuador();\r\n    this.peticionGetActuadores();\r\n  })\r\n}\r\n\r\npeticionDeleteLuz=()=>{\r\n  axiosInstance.delete(\"/luz/\"+this.state.formLuz.id).then(response=>{\r\n    this.setState({modalEliminarLuz: false});\r\n    this.peticionGetLuces();\r\n  })\r\n}\r\n\r\npeticionDeleteSensor=()=>{\r\n  axiosInstance.delete(\"/sensor/\"+this.state.formSensor.id).then(response=>{\r\n    this.setState({modalEliminarSensor: false});\r\n    this.peticionGetSensores();\r\n  })\r\n}\r\n\r\npeticionDeleteActuador=()=>{\r\n  axiosInstance.delete(\"/actuador/\"+this.state.formActuador.id).then(response=>{\r\n    this.setState({modalEliminarActuador: false});\r\n    this.peticionGetActuadores();\r\n  })\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n\r\n  componentDidMount() {\r\n    this.peticionGetLuces();\r\n    this.peticionGetSensores();\r\n    this.peticionGetActuadores();\r\n\r\n    this.peticionGetLucesRegistros();\r\n    this.peticionGetSensoresRegistros();\r\n    this.peticionGetActuadoresRegistros();\r\n  }\r\n  \r\n\r\n  render(){\r\n    const {formLuz}=this.state;\r\n    const {formSensor}=this.state;\r\n    const {formActuador}=this.state;\r\n  return (\r\n    <div className=\"App\">\r\n    <br /><br /><br />\r\n    <button className=\"btn btn-success\" onClick={()=>{this.setState({formLuz: null, tipoModal: 'insertar'}); this.modalInsertarLuz()}}>Agregar Luz</button>\r\n    <button className=\"btn btn-success\" onClick={()=>{this.setState({formSensor: null, tipoModal: 'insertar'}); this.modalInsertarSensor()}}>Agregar Sensor</button>\r\n    <button className=\"btn btn-success\" onClick={()=>{this.setState({formActuador: null, tipoModal: 'insertar'}); this.modalInsertarActuador()}}>Agregar Actuador</button>\r\n    <br /><br />\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <th>Descripcion</th>\r\n          <th>Tipo de Luz</th>\r\n          <th>Ubicacion</th>\r\n          <th>Unidades</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.luces.map(luz=>{\r\n          return(\r\n          <tr>\r\n            <td>{luz.id}</td>\r\n            <td>{luz.nombre}</td>\r\n            <td>{luz.descripcion}</td>\r\n            <td>{luz.tipoLuz}</td>\r\n            <td>{luz.ubicacion}</td>\r\n            <td>{luz.unidades}</td>\r\n            <td>\r\n              <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarLuz(luz); this.modalInsertarLuz()}}><FontAwesomeIcon icon={faEdit}/></button>\r\n              {\"   \"}\r\n              <button className=\"btn btn-danger\" onClick={() =>{this.seleccionarLuz(luz); this.setState({modalEliminarLuz: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n            </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    <br /><br />\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <th>Descripcion</th>\r\n          <th>Tipo de sensor</th>\r\n          <th>Ubicacion</th>\r\n          <th>Unidades</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.sensores.map(sensor=>{\r\n          return(\r\n          <tr>\r\n            <td>{sensor.id}</td>\r\n            <td>{sensor.nombre}</td>\r\n            <td>{sensor.descripcion}</td>\r\n            <td>{sensor.tipoSensor}</td>\r\n            <td>{sensor.ubicacion}</td>\r\n            <td>{sensor.unidades}</td>\r\n            <td>\r\n              <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarSensor(sensor); this.modalInsertarSensor()}}><FontAwesomeIcon icon={faEdit}/></button>\r\n              {\"   \"}\r\n              <button className=\"btn btn-danger\" onClick={() =>{this.seleccionarSensor(sensor); this.setState({modalEliminarSensor: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n            </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    \r\n    <br /><br />\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <th>Descripcion</th>\r\n          <th>Tipo de actuador</th>\r\n          <th>Ubicacion</th>\r\n          <th>Unidades</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.actuadores.map(actuador=>{\r\n          return(\r\n          <tr>\r\n            <td>{actuador.id}</td>\r\n            <td>{actuador.nombre}</td>\r\n            <td>{actuador.descripcion}</td>\r\n            <td>{actuador.tipoActuador}</td>\r\n            <td>{actuador.ubicacion}</td>\r\n            <td>{actuador.unidades}</td>\r\n            <td>\r\n              <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarActuador(actuador); this.modalInsertarActuador()}}><FontAwesomeIcon icon={faEdit}/></button>\r\n              {\"   \"}\r\n              <button className=\"btn btn-danger\" onClick={() =>{this.seleccionarActuador(actuador); this.setState({modalEliminarActuador: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n            </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    \r\n    <br /><br />\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>ID de la luz</th>\r\n          <th>Timestamp</th>\r\n          <th>valor</th>\r\n          <th>Ya fue aplicado?</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.lucesRegistros.map(luz=>{\r\n          return(\r\n          <tr>\r\n            <td>{luz.id}</td>\r\n            <td>{luz.idLuz}</td>\r\n            <td>{luz.timeStamp}</td>\r\n            <td>{luz.valor}</td>\r\n            <td>{luz.aplicado}</td>\r\n            <td>\r\n              <button className=\"btn btn-primary\" ><FontAwesomeIcon icon={faEdit}/></button>\r\n              {\"   \"}\r\n              <button className=\"btn btn-danger\" ><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n            </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    <br /><br />\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>ID del Sensor</th>\r\n          <th>Timestamp</th>\r\n          <th>valor</th>\r\n          <th>Ya fue aplicado?</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.sensoresRegistros.map(sensor=>{\r\n          return(\r\n          <tr>\r\n            <td>{sensor.id}</td>\r\n            <td>{sensor.idSensor}</td>\r\n            <td>{sensor.timeStamp}</td>\r\n            <td>{sensor.valor}</td>\r\n            <td>{sensor.aplicado}</td>\r\n            <td>\r\n              <button className=\"btn btn-primary\" ><FontAwesomeIcon icon={faEdit}/></button>\r\n              {\"   \"}\r\n              <button className=\"btn btn-danger\" ><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n            </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    <br /><br />\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>ID del Actuador</th>\r\n          <th>Timestamp</th>\r\n          <th>valor</th>\r\n          <th>Ya fue aplicado?</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.actuadoresRegistros.map(actuador=>{\r\n          return(\r\n          <tr>\r\n            <td>{actuador.id}</td>\r\n            <td>{actuador.idActuador}</td>\r\n            <td>{actuador.timeStamp}</td>\r\n            <td>{actuador.valor}</td>\r\n            <td>{actuador.aplicado}</td>\r\n            <td>\r\n              <button className=\"btn btn-primary\" ><FontAwesomeIcon icon={faEdit}/></button>\r\n              {\"   \"}\r\n              <button className=\"btn btn-danger\" ><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n            </td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Modal isOpen={this.state.modalInsertarLuz}>\r\n      <ModalHeader style={{display: 'block'}}>\r\n        <span style={{float: 'right'}} onClick={()=>this.modalInsertarLuz()}>x</span>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombre\">Nombre</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Lampara buro' name=\"nombre\" id=\"nombre\" onChange={this.handleChangeLuzForm} value={formLuz?formLuz.nombre: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Descripcion</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Lampara buro del cuarto' name=\"descripcion\" id=\"descripcion\" onChange={this.handleChangeLuzForm} value={formLuz?formLuz.descripcion: ''}/>\r\n          <br />\r\n          <label htmlFor=\"capital_bursatil\">Tipo de Luz</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='WRGB' name=\"tipoLuz\" id=\"tipoLuz\" onChange={this.handleChangeLuzForm} value={formLuz?formLuz.tipoLuz: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Ubicacion</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Sala' name=\"ubicacion\" id=\"ubicacion\" onChange={this.handleChangeLuzForm} value={formLuz?formLuz.ubicacion: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Unidades</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='% PWM' name=\"unidades\" id=\"unidades\" onChange={this.handleChangeLuzForm} value={formLuz?formLuz.unidades: ''}/>\r\n        </div>\r\n      </ModalBody> \r\n\r\n      <ModalFooter>\r\n        {this.state.tipoModal === 'insertar' ?\r\n          <button className=\"btn btn-success\" onClick={()=>this.peticionPostLuz()}>\r\n            Crear Luz\r\n          </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPutLuz()}>\r\n            Cambiar\r\n          </button>\r\n        }\r\n          \r\n          <button className=\"btn btn-danger\" onClick={()=>this.modalInsertarLuz()}>Cancelar</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n    \r\n    <Modal isOpen={this.state.modalInsertarSensor}>\r\n      <ModalHeader style={{display: 'block'}}>\r\n        <span style={{float: 'right'}} onClick={()=>this.modalInsertarSensor()}>x</span>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombre\">Nombre</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Sensor de humo' name=\"nombre\" id=\"nombre\" onChange={this.handleChangeSensorForm} value={formSensor?formSensor.nombre: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Descripcion</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Sensor de humo de la sala' name=\"descripcion\" id=\"descripcion\" onChange={this.handleChangeSensorForm} value={formSensor?formSensor.descripcion: ''}/>\r\n          <br />\r\n          <label htmlFor=\"capital_bursatil\">Tipo de Sensor</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Humo' name=\"tipoSensor\" id=\"tipoSensor\" onChange={this.handleChangeSensorForm} value={formSensor?formSensor.tipoSensor: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Ubicacion</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Sala' name=\"ubicacion\" id=\"ubicacion\" onChange={this.handleChangeSensorForm} value={formSensor?formSensor.ubicacion: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Unidades</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='PPM' name=\"unidades\" id=\"unidades\" onChange={this.handleChangeSensorForm} value={formSensor?formSensor.unidades: ''}/>\r\n        </div>\r\n      </ModalBody> \r\n\r\n      <ModalFooter>\r\n        {this.state.tipoModal === 'insertar' ?\r\n          <button className=\"btn btn-success\" onClick={()=>this.peticionPostSensor()}>\r\n            Crear Sensor\r\n          </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPutSensor()}>\r\n            Cambiar\r\n          </button>\r\n        }\r\n          <button className=\"btn btn-danger\" onClick={()=>this.modalInsertarSensor()}>Cancelar</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n    \r\n    <Modal isOpen={this.state.modalInsertarActuador}>\r\n      <ModalHeader style={{display: 'block'}}>\r\n        <span style={{float: 'right'}} onClick={()=>this.modalInsertarActuador()}>x</span>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombre\">Nombre</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Bomba de agua' name=\"nombre\" id=\"nombre\" onChange={this.handleChangeActuadorForm} value={formActuador?formActuador.nombre: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Descripcion</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Bomba de agua para regar plantas' name=\"descripcion\" id=\"descripcion\" onChange={this.handleChangeActuadorForm} value={formActuador?formActuador.descripcion: ''}/>\r\n          <br />\r\n          <label htmlFor=\"capital_bursatil\">Tipo de actuador</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Bomba 12V' name=\"tipoActuador\" id=\"tipoActuador\" onChange={this.handleChangeActuadorForm} value={formActuador?formActuador.tipoActuador: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Ubicacion</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='Sala' name=\"ubicacion\" id=\"ubicacion\" onChange={this.handleChangeActuadorForm} value={formActuador?formActuador.ubicacion: ''}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Unidades</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder='PPM' name=\"unidades\" id=\"unidades\" onChange={this.handleChangeActuadorForm} value={formActuador?formActuador.unidades: ''}/>\r\n        </div>\r\n      </ModalBody> \r\n\r\n      <ModalFooter>\r\n        {this.state.tipoModal === 'insertar' ?\r\n          <button className=\"btn btn-success\" onClick={()=>this.peticionPostActuador()}>\r\n            Crear actuador\r\n          </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPutActuador()}>\r\n            Cambiar\r\n          </button>\r\n        }\r\n          <button className=\"btn btn-danger\" onClick={()=>this.modalInsertarActuador()}>Cancelar</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n    <Modal isOpen={this.state.modalEliminarLuz}>\r\n      <ModalBody>\r\n          Estás seguro que deseas eliminar esta luz {formLuz && formLuz.nombre}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <button className=\"btn btn-danger\" onClick={()=>this.peticionDeleteLuz()}>Sí</button>\r\n        <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminarLuz: false})}>No</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n    <Modal isOpen={this.state.modalEliminarSensor}>\r\n      <ModalBody>\r\n          Estás seguro que deseas eliminar este sensor {formSensor && formSensor.nombre}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <button className=\"btn btn-danger\" onClick={()=>this.peticionDeleteSensor()}>Sí</button>\r\n        <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminarSensor: false})}>No</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n    <Modal isOpen={this.state.modalEliminarActuador}>\r\n      <ModalBody>\r\n          Estás seguro que deseas eliminar este actuador {formActuador && formActuador.nombre}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <button className=\"btn btn-danger\" onClick={()=>this.peticionDeleteActuador()}>Sí</button>\r\n        <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminarActuador: false})}>No</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  </div>\r\n\r\n\r\n\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}